{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [
        {
            "name": "NgNumberInputFormatDirective",
            "id": "directive-NgNumberInputFormatDirective-bc6c589106d93dea95af7da1975ce619",
            "file": "projects/ng-number-input-format/src/lib/ng-number-input-format.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport * as AutoNumeric from 'autonumeric';\n\n@Directive({\n  selector: 'input[ngNumberInputFormatDirective]'\n})\nexport class NgNumberInputFormatDirective {\n\n  constructor(\n    protected elementRef: ElementRef<HTMLInputElement>,\n    protected ngmodel: NgModel,\n  ) {\n\n    this.instance = new AutoNumeric(this.elementRef.nativeElement, '0.00', {\n      emptyInputBehavior: 'null',\n    });\n    this.ngmodel.valueChanges\n      .subscribe(this.handleNgModelUpdate.bind(this));\n  }\n\n  private instance: AutoNumeric;\n\n  private isKeyEvent = false;\n\n  private handleNgModelUpdate(value) {\n    if (!this.isKeyEvent) {\n      this.instance.set(value);\n    }\n    this.isKeyEvent = false;\n  }\n  @HostListener('keydown', ['$event'])\n  public handleHostListenerInput(evt: InputEvent) {\n    this.isKeyEvent = true;\n  }\n}\n",
            "selector": "input[ngNumberInputFormatDirective]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "evt",
                            "type": "InputEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 33
                }
            ],
            "propertiesClass": [
                {
                    "name": "instance",
                    "type": "AutoNumeric",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "isKeyEvent",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleNgModelUpdate",
                    "args": [
                        {
                            "name": "value",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>"
                    },
                    {
                        "name": "ngmodel",
                        "type": "NgModel"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef<HTMLInputElement>",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngmodel",
                        "type": "NgModel",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "NgNumberInputFormatComponent",
            "id": "component-NgNumberInputFormatComponent-ce60058dfa8fb5d221c8cd2a46d7ae6b",
            "file": "projects/ng-number-input-format/src/lib/ng-number-input-format.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ng-number-input-format",
            "styleUrls": [],
            "styles": [],
            "template": "<input [disabled]=\"disabled\" [readOnly]=\"readonly\" [ngModel]=\"value\" (ngModelChange)=\"valueChange.emit($event)\" ngNumberInputFormatDirective />",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 18
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "line": 12
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "line": 15
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'ng-number-input-format',\n  template: `<input [disabled]=\"disabled\" [readOnly]=\"readonly\" [ngModel]=\"value\" (ngModelChange)=\"valueChange.emit($event)\" ngNumberInputFormatDirective />`,\n  styles: [\n  ]\n})\nexport class NgNumberInputFormatComponent implements OnInit {\n\n  @Input()\n  public readonly = false;\n\n  @Input()\n  public value = 0;\n\n  @Input()\n  public disabled = false;\n\n  @Output()\n  public readonly valueChange = new EventEmitter<number>();\n\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 21
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "NgNumberInputFormatModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NgNumberInputFormatComponent"
                        },
                        {
                            "name": "NgNumberInputFormatDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NgNumberInputFormatComponent"
                        },
                        {
                            "name": "NgNumberInputFormatDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-number-input-format/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({}, { disabled: true })"
            },
            {
                "name": "DisabledWithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({}, { disabled: true, value: 2000.33 })"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({ }, { value: 0.00 })"
            },
            {
                "name": "Readonly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({}, {readonly: true, value: 10.312, })"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-number-input-format/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "SetValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "Story<NgNumberInputFormatComponent>",
                "defaultValue": "(args: NgNumberInputFormatComponent) => ({\n  props: args,\n  template: `\n    <ng-number-input-format [disabled]=\"disabled\" [(value)]=\"value\" [readonly]=\"readonly\">\n    </ng-number-input-format>\n    {{value}}\n\n    <button (click)=\"value = 20123.33\">set value to 20123.33</button>\n    <button (click)=\"value=value+301.21\">add 301.21</button>\n  `,\n})"
            },
            {
                "name": "TwoWayBinding",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/ng-number-input-format.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({}, { value: 10.12 })"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ng-number-input-format/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-number-input-format/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-number-input-format/src/test.ts",
                    "type": "literal type"
                }
            ],
            "stories/ng-number-input-format.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({}, { disabled: true })"
                },
                {
                    "name": "DisabledWithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({}, { disabled: true, value: 2000.33 })"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({ }, { value: 0.00 })"
                },
                {
                    "name": "Readonly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({}, {readonly: true, value: 10.312, })"
                },
                {
                    "name": "SetValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "Story<NgNumberInputFormatComponent>",
                    "defaultValue": "(args: NgNumberInputFormatComponent) => ({\n  props: args,\n  template: `\n    <ng-number-input-format [disabled]=\"disabled\" [(value)]=\"value\" [readonly]=\"readonly\">\n    </ng-number-input-format>\n    {{value}}\n\n    <button (click)=\"value = 20123.33\">set value to 20123.33</button>\n    <button (click)=\"value=value+301.21\">add 301.21</button>\n  `,\n})"
                },
                {
                    "name": "TwoWayBinding",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/ng-number-input-format.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({}, { value: 10.12 })"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ng-number-input-format/src/lib/ng-number-input-format.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgNumberInputFormatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ng-number-input-format/src/lib/ng-number-input-format.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgNumberInputFormatDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ng-number-input-format/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-number-input-format/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledWithValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Readonly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SetValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/ng-number-input-format.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoWayBinding",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}